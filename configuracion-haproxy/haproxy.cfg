#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#---------------------------------------------------------------------
# Global settings
# AUtor Ricardo Carrillo
#---------------------------------------------------------------------
global
    log         127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    stats timeout 30s
    # Default SSL material locations
    ca-base /etc/pki/nginx/certs
    crt-base /etc/pki/nginx/private
    # https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    ssl-server-verify none
    tune.ssl.default-dh-param 2048 
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode    http
    log     global
    option  httplog
    option  dontlognull
    option redispatch
    option forwardfor     except 127.0.0.0/8
    timeout server 600s
    timeout client 600s
    timeout connect 5s
    timeout queue 60s
    timeout http-request    10s
    timeout queue           1m
    timeout http-keep-alive 10s
    timeout check           10s
    retries 3
    default-server inter 15s rise 2 fall 2
#    log-format %ci:%cp\ [%trl]\ %f\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ \ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r
    #errorfile 400 /etc/haproxy/errors/400.http
    #errorfile 403 /etc/haproxy/errors/403.http
    #errorfile 408 /etc/haproxy/errors/408.http
    #errorfile 500 /etc/haproxy/errors/500.http
    #errorfile 502 /etc/haproxy/errors/502.http
    #errorfile 503 /etc/haproxy/errors/503.http
    #errorfile 504 /etc/haproxy/errors/504.http

# ricardo.carrillo - Monitoreo de los nodos a traves del puerto 8080
# http://bcorreo-mb.ca.example.com:8080/monitor
listen stats
    bind *:8080
    stats enable
    stats refresh 10s
    stats uri /haproxy
    stats show-legends
    stats show-node
    stats realm Auth\ required
    stats auth admin:123123
    stats admin if TRUE

# ricardo.carrillo – definiendo el frontend del servicio
frontend ft_pmovil_zpush 
    bind :443 ssl crt /etc/pki/nginx/certs/bcorreo-mb_z-push.pem
    mode http
    timeout http-request 10s
    reqadd X-Forwarded-Proto:\ http
    default_backend bk_pmovil_zpush

# ricardo.carrillo – definiendo el backend del servicio, por el caso de ser
# certificados autofirmados se omite la verificacion del mismo
backend bk_pmovil_zpush
    mode http
    balance roundrobin
    default-server inter 1s fall 2
    stick-table type ip size 200k expire 30m
    #option httpchk GET / HTTP/1.1\r\nHost:bcorreo-mb.ca.example.com
    server proxy-n1 192.168.1.18:443 check ssl verify none
    server proxy-n2 192.168.1.19:443 check ssl verify none
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

# ricardo.carrillo – definiendo el frontend del servicio
frontend ft_webmail_rc
     bind :8443 ssl crt /etc/pki/nginx/certs/bcorreo-mb_z-push.pem
     mode http
     tcp-request content accept if HTTP
     timeout http-request 10s
     option http-server-close
     option             forwardfor
     reqadd X-Forwarded-Proto:\ https
     redirect scheme https if !{ ssl_fc }
     use_backend bk_webmail_rc

backend bk_webmail_rc
    mode http
    balance roundrobin
    hash-type consistent
 #   cookie SERVERID insert indirect nocache
    cookie PHPSESSID prefix nocache postonly
    option forwardfor
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost
    server wproxy1 192.168.1.23:443 check cookie wproxy1 ssl verify none
    server wproxy2 192.168.1.24:443 check cookie wproxy2 ssl verify none
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request add-header X-CLIENT-IP %[src]
